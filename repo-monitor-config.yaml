# Repository Monitoring Configuration for AI Blog Writer SDKs
# Generated via GitHub CLI for tindevelopers organization

monitoring_config:
  version: "1.0"
  organization: "tindevelopers"
  created_at: "2025-01-11"
  
repositories:
  # Python Blog Writer SDK - Backend AI Generation
  - name: "Python Blog Writer SDK"
    github_repo: "tindevelopers/sdk-ai-blog-writer-python"
    url: "https://github.com/tindevelopers/sdk-ai-blog-writer-python"
    default_branch: "main"
    visibility: "public"
    type: "python"
    role: "backend_api"
    
    # Dependency tracking
    dependency_files:
      - path: "pyproject.toml"
        type: "python_project"
        primary: true
      - path: "requirements.txt"
        type: "pip_requirements"
        fallback: true
      - path: "main.py"
        type: "entrypoint"
        monitor_imports: true
    
    # Key dependencies to monitor
    critical_dependencies:
      - "fastapi"          # Web framework
      - "pydantic"         # Data validation
      - "openai"           # AI provider
      - "anthropic"        # AI provider
      - "supabase"         # Database
      - "uvicorn"          # ASGI server
      - "python-multipart" # File uploads
      - "python-jose"      # JWT tokens
    
    # API endpoints to monitor for breaking changes
    api_endpoints:
      - path: "/api/v1/blog/generate"
        method: "POST"
        critical: true
      - path: "/api/v1/config"
        method: "GET"
        critical: true
      - path: "/api/v1/ai/health"
        method: "GET"
        critical: false
      - path: "/health"
        method: "GET"
        critical: false
    
    # Files to monitor for breaking changes
    breaking_change_files:
      - "src/blog_writer_sdk/models/blog_models.py"
      - "main.py"
      - "src/blog_writer_sdk/core/blog_writer.py"
    
  # Next.js Frontend with AI Content Publisher SDK
  - name: "AI Blog Writer Frontend"
    github_repo: "tindevelopers/tin-ai-agents"
    url: "https://github.com/tindevelopers/tin-ai-agents"
    default_branch: "master"
    visibility: "public"
    type: "typescript"
    role: "frontend_client"
    
    # Dependency tracking
    dependency_files:
      - path: "package.json"
        type: "npm_package"
        primary: true
      - path: "package-lock.json"
        type: "npm_lockfile"
        integrity_check: true
    
    # Key dependencies to monitor
    critical_dependencies:
      - "next"             # Framework
      - "react"            # UI library
      - "typescript"       # Type safety
      - "axios"            # HTTP client
      - "@supabase/supabase-js" # Database client
      - "next-auth"        # Authentication
      - "tailwindcss"      # Styling
      - "framer-motion"    # Animations
    
    # SDK integration files to monitor
    sdk_integration_files:
      - "lib/python-sdk-client.ts"
      - "lib/content-publisher/"
      - "components/enhanced-content-editor.tsx"
      - "components/social-media-publisher.tsx"
    
    # Environment dependencies
    environment_dependencies:
      - "NEXT_PUBLIC_PYTHON_SDK_URL"
      - "SUPABASE_URL"
      - "NEXTAUTH_SECRET"

# Cross-repository dependency relationships
dependency_relationships:
  # Frontend depends on Python SDK API
  - source_repo: "tin-ai-agents"
    target_repo: "sdk-ai-blog-writer-python"
    relationship_type: "api_consumer"
    critical: true
    
    # API contract mappings
    api_contracts:
      - frontend_file: "lib/python-sdk-client.ts"
        frontend_interface: "BlogGenerationRequest"
        backend_file: "src/blog_writer_sdk/models/blog_models.py"
        backend_model: "BlogRequest"
        
      - frontend_file: "lib/python-sdk-client.ts"
        frontend_interface: "BlogGenerationResult"
        backend_file: "src/blog_writer_sdk/models/blog_models.py"
        backend_model: "BlogGenerationResult"
        
      - frontend_file: "components/enhanced-content-editor.tsx"
        frontend_usage: "pythonSDK.generateBlogPost()"
        backend_endpoint: "/api/v1/blog/generate"
    
    # Breaking change indicators
    breaking_change_indicators:
      - "Pydantic model field changes in blog_models.py"
      - "API endpoint signature modifications"
      - "Response format changes in main.py"
      - "Environment variable requirement changes"

# Update coordination rules
update_coordination:
  # Backend-first update strategy
  sequencing_rules:
    - name: "Backend First Rule"
      description: "Always update Python SDK before frontend"
      trigger_conditions:
        - "API contract changes"
        - "Pydantic model modifications"
        - "New endpoint additions"
      sequence:
        1: "Update sdk-ai-blog-writer-python"
        2: "Deploy and test Python SDK"
        3: "Update frontend API client"
        4: "Update tin-ai-agents frontend"
        5: "Run integration tests"
    
    - name: "Security Patches"
      description: "Security updates can be applied in parallel"
      trigger_conditions:
        - "Security vulnerability alerts"
        - "CVE notifications"
      parallel_updates: true
      priority: "high"
    
    - name: "Major Version Updates"
      description: "Coordinate major version changes carefully"
      trigger_conditions:
        - "Major version bumps (x.0.0)"
        - "Breaking changes detected"
      require_approval: true
      testing_required: true
      rollback_plan_required: true

# Monitoring and alerting configuration
monitoring:
  # Health checks
  health_checks:
    - name: "API Connectivity"
      description: "Frontend can reach Python SDK endpoints"
      test_endpoint: "${PYTHON_SDK_URL}/health"
      frequency: "hourly"
      timeout: "30s"
      
    - name: "Data Contract Validation"
      description: "Request/response schemas match"
      frequency: "on_deployment"
      validation_files:
        - "lib/python-sdk-client.ts"
        - "src/blog_writer_sdk/models/blog_models.py"
    
    - name: "Integration Tests"
      description: "End-to-end functionality works"
      frequency: "on_update"
      test_scenarios:
        - "Blog generation workflow"
        - "AI provider health checks"
        - "Content publishing pipeline"
  
  # Alert configuration
  alerts:
    critical:
      - "Breaking API changes detected"
      - "Security vulnerabilities (HIGH/CRITICAL)"
      - "Integration test failures"
      - "API endpoint downtime > 5 minutes"
    
    warning:
      - "Minor version updates available"
      - "Deprecated API usage detected"
      - "Performance degradation > 20%"
      - "Dependency conflicts detected"
    
    info:
      - "Patch updates available"
      - "New features added to SDK"
      - "Documentation updates"
      - "Successful deployments"

# GitHub CLI integration settings
github_cli_config:
  authentication:
    method: "keyring"
    account: "tindevelopers"
    scopes:
      - "repo"
      - "workflow"
      - "admin:repo_hook"
  
  # Automated actions
  automation:
    create_pull_requests: true
    run_status_checks: true
    enable_auto_merge: false  # Require manual approval
    
  # Webhook configuration for real-time monitoring
  webhooks:
    - repo: "sdk-ai-blog-writer-python"
      events: ["push", "pull_request", "release"]
      endpoint: "${MONITOR_WEBHOOK_URL}/python-sdk"
      
    - repo: "tin-ai-agents"
      events: ["push", "pull_request", "release"]
      endpoint: "${MONITOR_WEBHOOK_URL}/frontend"

# Repository access permissions
access_permissions:
  required_scopes:
    - "repo"              # Repository access
    - "workflow"          # GitHub Actions
    - "admin:repo_hook"   # Webhook management
    - "admin:org"         # Organization access
  
  monitoring_permissions:
    - "read:packages"     # Package registry access
    - "read:project"      # Project board access
    - "read:discussion"   # Discussion access
